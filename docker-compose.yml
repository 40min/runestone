services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: runestone-backend
    ports:
      - "8010:8010"
    env_file:
      - .env
    environment:
      - LLM_PROVIDER=${LLM_PROVIDER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - VERBOSE=${VERBOSE}
      - DATABASE_URL=sqlite:///./runestone.db
    volumes:
      - ./res:/app/res:ro
      - ./runestone.db:/app/runestone.db
      - ./state.json:/app/state.json
    networks:
      - runestone-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  recall:
    build:
      context: .
      dockerfile: Dockerfile.recall
    container_name: runestone-recall
    env_file:
      - .env
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=sqlite:///./runestone.db
      - VERBOSE=${VERBOSE}
    volumes:
      - ./runestone.db:/app/runestone.db
      - ./state.json:/app/state.json
    networks:
      - runestone-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: runestone-frontend
    ports:
      - "3010:3010"
    env_file:
      - .env
    environment:
      - VITE_API_BASE_URL=http://backend:8010
    depends_on:
      - backend
    networks:
      - runestone-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  runestone-network:
    driver: bridge