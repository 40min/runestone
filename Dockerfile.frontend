# Build stage
FROM node:20-alpine AS builder

# Labels
LABEL maintainer="runestone-team"
LABEL version="1.0.0"
LABEL description="Runestone Swedish textbook analysis service - Frontend"
LABEL org.opencontainers.image.source="https://github.com/your-org/runestone"

# Set work directory
WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY frontend/ ./

# Remove .env file for Docker build (we want empty API_BASE_URL for nginx proxy)
RUN rm -f .env

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Labels
LABEL maintainer="runestone-team"
LABEL version="1.0.0"
LABEL description="Runestone Swedish textbook analysis service - Frontend"
LABEL org.opencontainers.image.source="https://github.com/your-org/runestone"

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY --from=builder /app/nginx.conf /etc/nginx/conf.d/default.conf

# Create necessary directories and set permissions for nginx user
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run /run && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /var/run /run

# Expose port
EXPOSE 3010

# Switch to nginx user (already exists in nginx:alpine)
USER nginx

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
